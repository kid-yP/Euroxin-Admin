// This file is generated by Gemini.

'use server';

/**
 * @fileOverview This flow suggests follow-up actions for a field visit based on the notes taken during the visit.
 *
 * - suggestFollowUpActions - A function that takes visit notes as input and returns suggested follow-up actions.
 * - SuggestFollowUpActionsInput - The input type for the suggestFollowUpActions function.
 * - SuggestFollowUpActionsOutput - The return type for the suggestFollowUpActions function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestFollowUpActionsInputSchema = z.object({
  visitNotes: z
    .string()
    .describe('The notes taken during the field visit, including observations and comments.'),
});
export type SuggestFollowUpActionsInput = z.infer<
  typeof SuggestFollowUpActionsInputSchema
>;

const SuggestFollowUpActionsOutputSchema = z.object({
  followUpSuggestions: z
    .array(z.string())
    .describe('A list of suggested follow-up actions based on the visit notes.'),
});
export type SuggestFollowUpActionsOutput = z.infer<
  typeof SuggestFollowUpActionsOutputSchema
>;

export async function suggestFollowUpActions(
  input: SuggestFollowUpActionsInput
): Promise<SuggestFollowUpActionsOutput> {
  return suggestFollowUpActionsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestFollowUpActionsPrompt',
  input: {schema: SuggestFollowUpActionsInputSchema},
  output: {schema: SuggestFollowUpActionsOutputSchema},
  prompt: `You are an AI assistant that helps field representatives by suggesting follow-up actions after a client visit.

  Based on the following visit notes, suggest a list of follow-up actions that the field representative should take.

  Visit Notes:
  {{visitNotes}}

  Consider actions such as sending a product sample, scheduling a call, providing additional information, or any other relevant steps.
  Return the suggestions as a numbered list.
  `,
});

const suggestFollowUpActionsFlow = ai.defineFlow(
  {
    name: 'suggestFollowUpActionsFlow',
    inputSchema: SuggestFollowUpActionsInputSchema,
    outputSchema: SuggestFollowUpActionsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
